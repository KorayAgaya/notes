Burp Suite


# Firefox proxy

Preferences > Advanced > Network > Settings
Manual proxy configuration
HTTP Proxy: 127.0.0.1
Port: 8080
Use this proxy server for all protocols.
No proxy for: delete anything in here
------------------------------------------------------------------------------------------------------

# Certificate

Start Burp
Open Firefox to http://burp
CA Certificate > Save File
Preferences > Advanced > Certificates > View Certificates > Authorities > Import
Select the certificate that you previously downloaded > Open
Check Trust this CA to identify websites > OK > OK
Restart Firefox
------------------------------------------------------------------------------------------------------

# Extensions

www.jython.org/downloads.html
Download Jython Standalone Jar
Move to /Applications/
Extender > Options > Python Environment > Select file
Browse to /Applications/jython-standalone-(version).jar > Open

Extender > BApp Store > install the following:
     CO2, Error Message Checks, HeartBleed, J2EEScan, Paramalyzer, Site Map Fetcher, and XSS Validator
------------------------------------------------------------------------------------------------------

# Options

User Options > Display:
     User Interface > Font size: 14
     HTTP Message Display > Font: Monospaced 14

User Options > Misc:
     Proxy Interception: Always disable
     Performance Feedback: uncheck Submit annonymous feedback about Burp's performance

Project Options > Misc:
     Burp Collaborator Server: Don't use Burp Collaborator

Intruder > Options:
     Request Engine:
          Number of threads: 8
          Number of retries on network failure: 2

Options > Connections:
     Platform Authentication: enable Prompt for credentials on platform authentication failure

Proxy > Options:
     Intercept Client Requests:
     In the list below, enable URL and move to the top.
     Select File extension > Edit: add jpeg, move to the second position.

     Intercept Server Responses:
     Enable Intercept responses based on the following rules.
     In the list below, disable Content type header.
     Enable URL and move to the top.
     Add: And, File extension, Does not match, same Conditions as above.
     Move to the second position.

Scanner > Options:
     Active Scanning Engine > Number of retries on network failure: 2
     Active Scanning Optimization > Scan speed: Fast
     Static Code Analysis > Don’t perform static code analysis

Spider > Options:
     Form Submission > age: 36
     Spider Engine > Number of retries on network failure: 2

Target > Scope:
     Delete anything under Include in scope
     Exclude from scope:
          Add > File: (^.doc.*|^.docx.*|^.xls.*|^.xlsx.*|^.ppt.*|^.pptx.*|^.txt.*|^.pdf.*)

Target > Site map:
     Filter > restore defaults > Filter

Save the state: burp-baseline
This will provide you a starting point for all future scans.
To recall this state: Burp > Restore state > browse to burp-baseline > Open > Next 3x > Close
------------------------------------------------------------------------------------------------------

# Quick Start

- Scope
Firefox > surf to the target site and click on a couple of links.
Burp > Target > Site map > right click (RC) on the target URL > Add to scope
Target > Scope: you will see the URL listed in the top window
Target > Site map > Filter: enable Show only in-scope items > Filter

- Manually browse app
Look for target.com/sitemap.
If present, hold down the Command key and click on about 20 links.
If not present, start exploring the target by clicking on every link on every page.
Enter a single tick (') in any input field.
Continue until you have thoroughly browsed the target.

- Spider app
Target > Site map > RC on the target URL > Spider this host
Spider > Control: watch the Requests made increase.
When the Requests and Forms queued are both zero, click Spider is running.

Target > Site map > RC the target URL > Expand branch
Scroll to the very bottom.
RC on any folders that are greyed out > Delete branch
RC on any pages that are grey or red > Copy URL > paste into Firefox
     Or RC on any pages that are grey or red > GET Empty Response
Save the state: <appname>-spider

- Brute force directories and files
Target > Site map > RC on '/' > Send to Intruder
Intruder > Position > Attack type: Sniper
Clear §
On the top line, select the forward slash '/' after GET > Add §
Move the forward slash in front of the two symbols. It should look like: GET /§§
Payloads:
     Payload Sets
          Payload set: 1
          Payload type: Simple list
     Payload Options > Add from list:
          Directories - long
     Payload Option > Load:
          DirBuster-1.0-RC1 > directory-list-2.3-small.txt
Start attack
Filter > uncheck 4xx [request error] > Filter
Click Status to sort by ascending.
Clean up results when the attack completes:
     Select the first line with a 301 status.
     Hold down shift and select the last line with a 301 status.
     RC > Delete select items > Yes
Add remaining items to Site map:
     RC on the first line > Request in browser > In current session
     Check: In future, just copy the URL and don't show this dialog > Copy
     Firefox > open a new tab > paste
     Repeat with remaining lines.
Save the state: <appname>-BFdir

- Brute force logins
Try to login
Proxy > History > find the POST request > RC > Send to Intruder

Intruder > Payloads > Attack type:
     Sniper:
          Uses a single set of payloads against a single variable.
     Battering ram:
          Uses a single set of payloads against all variables.
     Pitchfork:
          Uses multiple payload sets.
          For example: you have a known list of usernames and a related list of passwords. 
          This will try the first username with the first password, then the second username with the second password, and so on.
          This is useful when checking for old accounts that should be deleted.
     Cluster bomb:
          Uses multiple payload sets.
          For example: you have a known list of usernames and a non-related list of passwords.
          This will try the first username with each password, then the second username with each password, and so on.

-- Brute force basic authentication: Sniper
     Clear $
     Highlight the Authorization: Basic parameter > Add $
     This parameter is Base64 encoded.
     Copy the parameter > Decoder > paste in the top window
     Select the top drop-down menu on the right > Base64
     For example: YWRtaW46dGVzdDEyMw== decoded is admin:test123
     Notice there is a colon between the username and password
     
     Intruder > Payloads > Payload Sets > Payload type: Custom iterator
     List 1 with the possible Usernames and List 2 with possible passwords.
     Position: 1
          Type in the username (admin in our example) > Add
          Separator for position 1: : (colon in our example)
     Position: 2
          Load > choose your wordlist > Open
     Now we need to encode the whole string into Base64.
     <*** more stuff here ***>
     Start attack
     
-- Brute force a password: Sniper
     Clear $
     Highlight the password you entered > Add $
     Intruder > Payloads > Payload Options
     Load > choose your password list > Open
     Start attack

-- Brute force usernames and passwords: Cluster bomb
     Clear $
     Highlight the username you entered > Add $ 
     Highlight the password you entered > Add $
     Intruder > Payloads
          Payload Sets
               Payload set: 1
               Payload type: Simple list
          Payload Options
               Clear > Load: choose your username list > Open
          Payload Sets
               Payload set: 2
               Payload type: Simple list
          Payload Options
               Clear > Load: choose your password list > Open
          Start attack

Filter > uncheck 4xx [request error] > Filter
Click Status to sort by ascending.
Look for a 302 (redirect). This should be a successful login.
Save the state: <appname>-BFlogin

- Scan app
Spider > Control > Spider is paused
Target > Site map > RC on the target URL > Actively scan this host
Active scanning wizard: check all boxes > Next > Ok
Scanner > Scan que > RC > Automatically delete finished items > Yes
Scanner > Results
Save the state: <appname>-scan
------------------------------------------------------------------------------------------------------

# Alerts

If you start seeing an increase in java.net.SocketException: Connection reset
Scanner > Options:
     Active Scanning Engine: enable Throttle between requestions: 200
     Active Scanning Optimization > Scan Accuracy: Normal
------------------------------------------------------------------------------------------------------

# Authentication

Options > Connections > Platform Authentication > Add
     Destination host: target URL
     Authentication type: Basic, NTLMv1, NTLMv2 or Digest
     Username and Password
Domain and Hostname are only used for NTLM.
OK
------------------------------------------------------------------------------------------------------

# CSRF

You should be logged into the web application.
Create a list of all POST requests that do not have a unique token called ‘CSRF_Token’. 

Proxy > HTTP history > Filter > Filter by search term
	^POST((?!CSRF_Token).)*$
	Click Regex

RC on the first request > Engagement tools > Generate CSRF PoC
Test in browser > Copy
Open a new tab in Firefox > paste

Look for evidence that it executed whatever that HTTP request was supposed to do.

https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-
https://portswigger.net/burp/help/suite_functions_csrfpoc.html
------------------------------------------------------------------------------------------------------

# Manually Validate Findings

File path traversal: RC in the Request body > Send to Repeater > modify the request 
XML Injection: Search in the Response body for http://www.w3.org/2001/XMLSchema. This is a false positive.
XSS:  RC in the Request body > Request in browser > In current browser session
------------------------------------------------------------------------------------------------------

# Mobile app testing

Proxy > Options > Proxy Listeners > Add > Binding:
     Bind to port: 8081
     Bind to address: All interfaces
     OK > Yes

iPhone: Settings > Wi-Fi > select your network > scroll to the bottom
HTTP PROXY > Manual
     Server: your computer's IP address.
     Port: 8081

Safari > http://burp
     Select CA Certificate
     It will prompt you to install, then ask for your password
------------------------------------------------------------------------------------------------------

# Reporting

Select all remaining findings > RC > Report selected issues > Next 4x > enter file location > Next > Close
